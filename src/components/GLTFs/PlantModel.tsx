/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Thunder (https://sketchfab.com/thunderpwn)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/bush-1e3321934c41424e9e2c02a24fd00aba
title: bush
*/

import * as THREE from "three";
import React, { useRef, useMemo } from "react";
import { useGLTF, Merged } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    bushgreen1_GreenBushMAt_0: THREE.Mesh;
  };
  materials: {
    GreenBushMAt: THREE.MeshStandardMaterial;
  };
};

export default function PlantModel(props) {
  const { nodes } = useGLTF("/models/bush/scene.gltf") as GLTFResult;
  const instances = useMemo(
    () => ({
      BushgreenGreenBushMAt: nodes.bushgreen1_GreenBushMAt_0,
    }),
    [nodes]
  );
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => <Model instances={instances} />}
    </Merged>
  );
}

function Model({
  instances,
  ...props
}: JSX.IntrinsicElements["group"] & { instances: any }) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF("/models/bush/scene.gltf") as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null} scale={0.05}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[0, -1.25, 0]} rotation={[-Math.PI / 2, 0, 0]}>
            <instances.BushgreenGreenBushMAt />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/bush/scene.gltf");
