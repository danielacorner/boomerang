/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: mano1creative (https://sketchfab.com/mano1creative)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/17cf0dbe4435434eb6e04394fd5bf7ae
title: Low Poly Spinning Heart!
*/

import * as THREE from "three";
import React, { useRef, useMemo } from "react";
import { useGLTF, Merged, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Mesh_Default_0: THREE.Mesh;
  };
  materials: {
    Default: THREE.MeshStandardMaterial;
  };
};

export default function HeartModel(props) {
  const { nodes } = useGLTF("/models/heart/scene.gltf") as GLTFResult;
  const instances = useMemo(
    () => ({
      MeshDefault: nodes.Mesh_Default_0,
    }),
    [nodes]
  );
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => <Model instances={instances as any} />}
    </Merged>
  );
}

function Model({ instances, ...props }: any) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/models/heart/scene.gltf"
  ) as GLTFResult;
  const { actions } = useAnimations<any>(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group name="Mesh" position={[0, 0.05, -0.1]}>
            <instances.MeshDefault />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/heart/scene.gltf");
